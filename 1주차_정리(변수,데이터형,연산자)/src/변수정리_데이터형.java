/*
 *    변수 : 변경이 가능한 데이터, 한 개의 데이터만 저장할 수 있는 메모리 공간
 *          ---------------  ----------------
 *          상수 : 변경할 수 없다, 한 개의 데이터만 저장이 가능 (인원수, 배열의 갯수)
 *          변수 -> 데이터형 변수명
 *          상수 -> final 데이터형 변수명
 *  ---------------------------------------------------------------------        
 *    데이터형
 *     = 기본형 (자바에서 지원하는 메모리 크기)
 *     = 참조형 (사용자 정의 데이터형) => 배열, 클래스, 인터페이스, 열거형
 *                                  --------------------------(클래스, 인터페이스)
 *                                   9장~마지막장(라이브러리)
 *     = 프로그램 (형식 => 응용 => 에러를 방지)
 *              형식 ) 자바문법, 알고리즘(순서)
 *     = 프로그램 : 변수, 연산자, 제어문  => 나머지는 모아주는 역할
 *                =========> 기능(메소드) : 명령문 집합
 *                           ---------------------여러개 묶어서 사용하는것 : 클래스 ==> 패키지
 *     자바에서 지원하는 데이터형(메모리 크기)
 *     -----------------------------------------------------------
 *     정수
 *       byte : 네트워크 (getBytes()), 파일 입출력(다운로드, 업로드), 웹 => 라이브러리
 *              -128~127 (1byte ==> 8bit), bit(0,1)
 *       int : 일상에서 사용되는 모든 정수 ( 가장 많이 사용되는 데이터형)
 *              -21억 4천 ~ 21억 4천 (4byte ==> 32bit)
 *             long a=10;
 *                    -- int형
 *             int a=1000000000; - 오류
 *             
 *       long : 빅데이터, 금융권, 증권, 학교
 *              (8byte ==> 64bit)
 *       정수변수를 설정 ==> int      
 *     -----------------------------------------------------------
 *     문자 : 한개의 문자만 저장 => char (0~65535)
 *           = 한글도 포함이 가능 => '홍', '김', 'A', 'z', '1'...
 *           = 모든 문자는 번호를 가지고 있다 (ASC코드)
 *             'A' ==> 65, 'a' ==>97, '0' ==> 48
 *           = 연산처리에는 정수형으로 변경
 *     -----------------------------------------------------------
 *     실수 : 평상시에 사용하는 모든 실수 : double
 *           double (8byte => 소수점 15자리)
 *           10.5, 20.0 ...
 *     -----------------------------------------------------------
 *     논리 : boolean (1byte) ==> true/false
 *     -----------------------------------------------------------
 *     ==> 정수 (int), 실수 (double)
 *     
 *     메모리 저장 위치 (자바(JVM) => 메모리 공간)
 *     ========================================================
 *      Method영역 (static변수)
 *     ========================================================
 *      Stack : 지역변수, 매개변수
 *              ------ 현재 사용하고 있는 변수
 *              = 반드시 초기화
 *              = {}이 종료하면 자동으로 사라짐 => 메모리 자체에서 관리
 *     ========================================================
 *      Heap : 멤버변수, 클래스, 배열 == 참조변수(사용자 정의 데이터형)
 *             ==> new
 *             ==> 메모리 관리 (프로그래머가 담당)
 *     ========================================================
 *     
 *   ==> 변수 설정, 명칭
 *     식별자 (변수, 메소드, 클래스, 인터페이스)
 *       = 변수, 메소드는 소문자 시작 (문법 사항(X)) ==> 두개 이상의 단어 _, 두개 이상의 대문자
 *         firstname ==> first_name, firstName, 들여쓰기
 *       = 클래스, 인터페이스 대문자 시작
 *       ----------------------------------------------------------------------
 *       1. 알파벳, 한글로 시작을 한다. (단 한글은 운영체제에 따라 달라 깨질수잇음 => 가급적이면 알파벳 사용)
 *       2. 숫자를 사용할 수 있다. (단 앞에 사용 금지) => a1, name1, a1b ....
 *       3. 특수문자 사용이 가능 ( _, $) => _ (두개의 단어 결합, 임시변수) => _, temp(문자를 자른다, 변수값 교환)
 *       4. 키워드는 사용 금지
 *          자바에서 이미 사용중인 단어 => int, double
 *          ex) int int a; (x) int double b (x)
 *        ==> 메모리에 주소 대신 별칭을 부여 (변수명)
 *       ----------------------------------------------------------------------------
 *       변수 설정 ( 메모리 공간 ==> 데이터를 저장)
 *       -----------------------
 *       데이터형 변수명 ; ==> 선언
 *       변수명=값; ==> 초기화값
 *       -----------------------
 *       데이터형 변수명=값; ==> 선언과 동시에 초기화 (명시적인 초기화)
 *       ---------------------------------------------------
 *       같은 데이터형이 여러개 있는 경우는 ,
 *       int a,b,c,d,e;
 *       => int a=0,b=1,c=2,d=3,e=4;
 *       ---------------------------------------------------
 *       int a,b,c;
 *       a=b=c=0;
 *       ---------------------------------------------------
 *       변수의 초기값 (표현법)
 *       int a=10    (10진법)
 *       int a=012;  (8진법)
 *       int a=0xFF; (16진법)
 *       int a=1010(2진법 불가) -> 2진법 쓰려면 int a=0b1010;   
 *       
 *       long a=10L;
 *       long a=10l;  => long 표현은 (L,l)
 *       
 *       char c='' ==> 한글 글자만 사용
 *              --- null 오류
 *              
 *       boolean b=true/false
 *       double d=10.6
 *       --------------------------------------------------------
 *       큰데이터형에는 작은 데이터값을 대입해도 가능 (자동으로 값을 변경한다 - 자동 형변환)
 *       int a='A'  => a=65
 *       double d=100 ==> d=100.0
 *       
 *       byte < char < int < long < double   (short, float : 사용빈도가 적음)
 *       
 *       
 *       1) 20-21쪽 : 변수, 초기화
 *       2) 25-26쪽  : 식별자, 약속
 *       3) 27쪽      : 기본형 / 참조형
 *       4) 28쪽      : 기본형 => 종류
 *       5) 29쪽      : 기본형 크기
 *       6) 32쪽      : 접미어 ==> L,l,F,f ..
 *       7) 35쪽      : 문자열 결합
 *                    "a="+10  ==> "a=10"
 *                    10+"a"   ==> "10a"
 *                    10+10+"a"
 *                    ----- 
 *                    20+"a"  ==> "20a"
 *                    
 *                    "a"+10+10
 *                    ------
 *                    "a10"+10 ==> "a1010"
 *        8) 36쪽      : 출력
 *           printf() ==> %d(정수), %c(문자), %s(문자열), %f(실수), %b(boolean)
 *        9) 40쪽 ==> 입력 (Scanner)
 *        10) 74쪽     : 형변환
 *            => 데이터형 변경 ( 문자 => 정수, 정수 => 실수, 문자 => 실수, 실수 => 정수)
 *        11) 82쪽     : 자동 형변환
 */
public class 변수정리_데이터형 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
